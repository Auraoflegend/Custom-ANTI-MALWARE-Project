# malware_scanner.py

import hashlib
import os
from pymongo import MongoClient

# Setup the MongoDB connection (replace with your credentials)
client = MongoClient('mongodb+srv://normal-user:Myproject0108@virus-db.42ahp.mongodb.net/')
db = client['Virus-DB']  # Replace with your database name
collection = db['virus_info']  # Replace with your collection name

# Helper function to calculate SHA256 hash of a file
def calculate_file_hash(file_path):
    sha256_hash = hashlib.sha256()
    try:
        with open(file_path, 'rb') as file:
            while chunk := file.read(8192):  # Read the file in chunks
                sha256_hash.update(chunk)
        return sha256_hash.hexdigest()
    except (PermissionError, FileNotFoundError) as e:
        print(f"Error reading file {file_path}: {e}")
        return None

# Function to query the database for malware by its file hash
def query_malware_by_hash(file_hash):
    try:
        result = collection.find_one({"virus_hash": file_hash})
        if result:
            return result['virus_name']
    except Exception as e:
        print(f"Error querying malware data: {e}")
    return None

# Full system scan function
def full_scan(update_progress):
    malware_found = []

    # Walk through the system, starting from "C:/" (you can adjust the base directory)
    for dirpath, _, filenames in os.walk("C:/"):
        for filename in filenames:
            file_path = os.path.join(dirpath, filename)
            file_hash = calculate_file_hash(file_path)

            if file_hash:
                # Query the database for the file hash to check if it is malware
                malware_name = query_malware_by_hash(file_hash)
                
                if malware_name:
                    malware_found.append((malware_name, file_path))
            
            # Update the progress in the GUI
            update_progress(file_path)

    return malware_found

# Folder scan function
def folderscan(folder_path, update_progress):
    malware_found = []

    # Walk through the folder specified
    for dirpath, _, filenames in os.walk(folder_path):
        for filename in filenames:
            file_path = os.path.join(dirpath, filename)
            file_hash = calculate_file_hash(file_path)

            if file_hash:
                # Query the database for the file hash to check if it is malware
                malware_name = query_malware_by_hash(file_hash)

                if malware_name:
                    malware_found.append((malware_name, file_path))

            # Update the progress in the GUI
            update_progress(file_path)

    return malware_found
